version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: finwise
      POSTGRES_USER: finwise_user
      POSTGRES_PASSWORD: akashi #1111
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - finwise-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finwise_user -d finwise"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - finwise-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/finwise
      - SPRING_DATASOURCE_USERNAME=finwise_user
      - SPRING_DATASOURCE_PASSWORD=finwise_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - finwise-network
    volumes:
      - ./backend:/app
      - maven_repo:/root/.m2

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - finwise-network

networks:
  finwise-network:

volumes:
  postgres_data:
  redis_data:
  maven_repo: